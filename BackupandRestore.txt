mysqldump is an effective tool to backup MySQL database. It creates a *.sql file with DROP table,
 CREATE table and INSERT into sql-statements of the source databases.
 To restor the database, execute the *.sql file on destination database.

 backup: mysqldump -u root -p[root_password] [database_name] > dumpfilename.sql

 restore: mysql -u root -p[root_password] [database_name] < dumpfilename.sql

 Dump without data :
  -----------------

mysqldump -u [user] -h [localhost] --no-data -p[password] [database] > database.sql

 Backup a single database:
 -------------------------

 mysqldump -u root -p[root_password] [database_name] > dumpfilename.sql

 dumpfilename.sql will contain drop table, create table and insert command for all the tables in the  database.

Backup multiple databases:
--------------------------

mysqldump -u root -ptmppassword --databases [database_name] [database_name] > bugs_sugarcrm.sql

 Backup all the databases:
 -------------------------
 mysqldump -u root -ptmppassword --all-databases > /tmp/all-database.sql 
 
 to change the locking behaviour (definer does not exist LOCK TABLES ) of mysqldump use  --single-transaction

 mysqldump -u root -ptmppassword --single-transaction --all-databases > /tmp/all-database.sql

 Backup a specific table:
 ------------------------

 mysqldump -u root -ptmppassword [database_name] [table_name]     > /tmp/table.sql

Different mysqldump group options:
----------------------------------
–opt is a group option, which is same as –add-drop-table, –add-locks, –create-options, 
–quick, –extended-insert, –lock-tables, –set-charset, and –disable-keys. opt is enabled by default, disable with –skip-opt.
–compact is a group option, which gives less verbose output (useful for debugging). 
Disables structure comments and header/footer constructs. 
Enables options –skip-add-drop-table –no-set-names –skip-disable-keys –skip-add-locks


Restore a database
------------------

 Need to creatd the database 



Backup a local database and restore to remote server using single command:
--------------------------------------------------------------------------

This is a sleek option, if you want to keep a read-only database on the remote-server, which is a copy of the master database on local-server. The example below will backup the db_test database on the local-server and restore it as db_test1 database on the remote-server. Please note that you should first create the db_test1 database on the remote-server before executing the following command.

[local-server]# mysqldump -u root -ptmppassword db_test | mysql \
                 -u root -ptmppassword --host=remote-server -C db_test1
[Note: There are two -- (hyphen) in front of host]

 mysql -u root -p[root_password] [database_name] < dumpfilename.sql

